name: Build and Deploy
on:
  workflow_dispatch:
  push:
    branches:
      - master
    paths-ignore:
      - daemon/**
defaults:
  run:
    working-directory: ui
jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      # - name: Get current date
      #   id: date
      #   run: echo "::set-output name=date::$(date +'%Y-%m-%d')"
      - name: Check out repository code
        uses: actions/checkout@v2
      - run: git pull origin master
      - run: echo "ðŸ’¡ The ${{ github.repository }} repository has been cloned to the runner."
      - uses: actions/setup-node@v2
        with:
          node-version: "14.16.0"
      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: |
            ~/.npm
            ./node_modules
          key: ${{ env.cache-name }}-${{ hashFiles('yarn.lock') }}-${{ github.ref}}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('yarn.lock') }}-
      # - name: Cache gatsby output modules
      #   uses: actions/cache@v2
      #   env:
      #     cache-name: cache-gatsby
      #   with:
      #     path: |
      #       ./.cache
      #       ./public
      #     key: ${{ env.cache-name }}-${{ github.ref }}-${{ steps.date.outputs.date }}
      #     restore-keys: |
      #       ${{ env.cache-name }}-${{ github.ref }}-
      - name: Install dependencies
        run: yarn install
      - name: Build site
        run: yarn build
        env:
          GATSBY_FIREBASE_API_KEY: ${{ secrets.GATSBY_FIREBASE_API_KEY }}
          GATSBY_FIREBASE_DATABASE_URL: ${{ secrets.GATSBY_FIREBASE_DATABASE_URL }}
          GATSBY_FIREBASE_AUTH_DOMAIN: ${{ secrets.GATSBY_FIREBASE_AUTH_DOMAIN }}
          GATSBY_FIREBASE_PROJECT_ID: ${{ secrets.GATSBY_FIREBASE_PROJECT_ID }}
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - name: Deploy
        run: S3_BUCKET_NAME=${{ secrets.S3_BUCKET_NAME }} yarn deploy
      - name: Invalidate cloudfront
        run: CLOUDFRONT_DISTRIBUTION_ID=${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }} yarn invalidate-cloudfront
